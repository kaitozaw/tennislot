# Generated by Django 5.2.4 on 2025-07-18 04:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organiser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('stripe_user_id', models.CharField(blank=True, max_length=128, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('public_url', models.CharField(max_length=64, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_pages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courts', to='core.bookingpage')),
            ],
            options={
                'ordering': ['booking_page', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('player_email', models.EmailField(max_length=254)),
                ('player_phone', models.CharField(max_length=30)),
                ('payment_status', models.CharField(choices=[('unpaid', 'Unpaid'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='unpaid', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.court')),
            ],
            options={
                'ordering': ['-date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_options', to='core.bookingpage')),
            ],
            options={
                'ordering': ['booking_page', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BookingEquipmentOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_equipment_options', to='core.booking')),
                ('equipment_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_equipment_options', to='core.equipmentoption')),
            ],
            options={
                'ordering': ['booking', 'equipment_option'],
            },
        ),
        migrations.CreateModel(
            name='HolidayException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('note', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holiday_exceptions', to='core.bookingpage')),
            ],
            options={
                'ordering': ['booking_page', 'date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='OpeningHourRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hour_rules', to='core.bookingpage')),
            ],
            options={
                'ordering': ['booking_page', 'weekday'],
            },
        ),
        migrations.CreateModel(
            name='SlotDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_size', models.PositiveIntegerField(choices=[(30, '30 minutes'), (60, '60 minutes')])),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slot_definition', to='core.bookingpage')),
            ],
            options={
                'ordering': ['booking_page', 'slot_size'],
            },
        ),
        migrations.CreateModel(
            name='SpecialException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('note', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_exceptions', to='core.court')),
            ],
            options={
                'ordering': ['court', 'date', 'start_time'],
            },
        ),
        migrations.AddConstraint(
            model_name='court',
            constraint=models.UniqueConstraint(fields=('booking_page', 'name'), name='unique_booking_page_court_name'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['court', 'date'], name='core_bookin_court_i_d58a65_idx'),
        ),
        migrations.AddConstraint(
            model_name='equipmentoption',
            constraint=models.UniqueConstraint(fields=('booking_page', 'name'), name='unique_booking_page_equipment_option_name'),
        ),
        migrations.AddConstraint(
            model_name='bookingequipmentoption',
            constraint=models.UniqueConstraint(fields=('booking', 'equipment_option'), name='unique_booking_equipment_option'),
        ),
        migrations.AddConstraint(
            model_name='openinghourrule',
            constraint=models.UniqueConstraint(fields=('booking_page', 'weekday'), name='unique_booking_page_weekday'),
        ),
        migrations.AddConstraint(
            model_name='slotdefinition',
            constraint=models.UniqueConstraint(fields=('booking_page',), name='unique_booking_page'),
        ),
    ]
